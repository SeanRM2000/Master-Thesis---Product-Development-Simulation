DOE(
	Easy DOE,
	{usage( 1 ), Add Response( Minimize, "Cost", ., ., . ),
	Add Response( Minimize, "Lead Time", ., ., . ),
	Add Response( Minimize, "Risk", ., ., . ),
	Add Response( Maximize, "Rework Effectivness", 0, 1, . ),
	Add Response( Minimize, "Average Iterations", ., ., . ),
	Add Response( Maximize, "FPY", ., ., . ),
	Add Response( Minimize, "Physical Cost", 0, 1, . ),
	Add Response( Maximize, "Work Efficiency", 0, 1, . ),
	Add Response( Maximize, "Average Consitency", 0, 1, . ),
	Add Factor( Continuous, -0.5, 0.5, "T_Acc (old)", 0 ),
	Add Factor( Continuous, 0.2, 0.8, "T_I (old)", 0 ),
	Add Factor( Continuous, 1, 3, "DL_Eng", 0 ),
	Add Factor( Continuous, 1, 3, "DL_EKM", 0 ),
	Add Factor( Categorical, {"False", "True"}, "New Tool", 0 ),
	Add Factor( Continuous, 0.2, 0.8, "T_Acc (new)", 0 ),
	Add Factor( Continuous, 0.2, 0.8, "T_I (new)", 0 ),
	Add Factor( Continuous, 1, 3, "T_Usab", 0 ), Set Random Seed( 53587016 ),
	Add Term( {1, 0} ), Add Term( {1, 1} ), Add Term( {2, 1} ), Add Term( {3, 1} ),
	Add Term( {4, 1} ), Add Term( {5, 1} ), Add Term( {6, 1} ), Add Term( {7, 1} ),
	Add Term( {8, 1} ), Add Term( {1, 2} ), Add Term( {1, 1}, {2, 1} ),
	Add Term( {2, 2} ), Add Term( {1, 1}, {3, 1} ), Add Term( {2, 1}, {3, 1} ),
	Add Term( {3, 2} ), Add Term( {1, 1}, {4, 1} ), Add Term( {2, 1}, {4, 1} ),
	Add Term( {3, 1}, {4, 1} ), Add Term( {4, 2} ), Add Term( {1, 1}, {5, 1} ),
	Add Term( {2, 1}, {5, 1} ), Add Term( {3, 1}, {5, 1} ),
	Add Term( {4, 1}, {5, 1} ), Add Term( {1, 1}, {6, 1} ),
	Add Term( {2, 1}, {6, 1} ), Add Term( {3, 1}, {6, 1} ),
	Add Term( {4, 1}, {6, 1} ), Add Term( {5, 1}, {6, 1} ), Add Term( {6, 2} ),
	Add Term( {1, 1}, {7, 1} ), Add Term( {2, 1}, {7, 1} ),
	Add Term( {3, 1}, {7, 1} ), Add Term( {4, 1}, {7, 1} ),
	Add Term( {5, 1}, {7, 1} ), Add Term( {6, 1}, {7, 1} ), Add Term( {7, 2} ),
	Add Term( {1, 1}, {8, 1} ), Add Term( {2, 1}, {8, 1} ),
	Add Term( {3, 1}, {8, 1} ), Add Term( {4, 1}, {8, 1} ),
	Add Term( {5, 1}, {8, 1} ), Add Term( {6, 1}, {8, 1} ),
	Add Term( {7, 1}, {8, 1} ), Add Term( {8, 2} ), Add Alias Term( {1, 1}, {2, 1} ),
	Add Alias Term( {1, 1}, {3, 1} ), Add Alias Term( {1, 1}, {4, 1} ),
	Add Alias Term( {1, 1}, {5, 1} ), Add Alias Term( {1, 1}, {6, 1} ),
	Add Alias Term( {1, 1}, {7, 1} ), Add Alias Term( {1, 1}, {8, 1} ),
	Add Alias Term( {2, 1}, {3, 1} ), Add Alias Term( {2, 1}, {4, 1} ),
	Add Alias Term( {2, 1}, {5, 1} ), Add Alias Term( {2, 1}, {6, 1} ),
	Add Alias Term( {2, 1}, {7, 1} ), Add Alias Term( {2, 1}, {8, 1} ),
	Add Alias Term( {3, 1}, {4, 1} ), Add Alias Term( {3, 1}, {5, 1} ),
	Add Alias Term( {3, 1}, {6, 1} ), Add Alias Term( {3, 1}, {7, 1} ),
	Add Alias Term( {3, 1}, {8, 1} ), Add Alias Term( {4, 1}, {5, 1} ),
	Add Alias Term( {4, 1}, {6, 1} ), Add Alias Term( {4, 1}, {7, 1} ),
	Add Alias Term( {4, 1}, {8, 1} ), Add Alias Term( {5, 1}, {6, 1} ),
	Add Alias Term( {5, 1}, {7, 1} ), Add Alias Term( {5, 1}, {8, 1} ),
	Add Alias Term( {6, 1}, {7, 1} ), Add Alias Term( {6, 1}, {8, 1} ),
	Add Alias Term( {7, 1}, {8, 1} ), Set Sample Size( 100 ),
	Optimality Criterion( "Make I-Optimal Design" ), Simulate Responses( 0 ),
	Save X Matrix( 0 )},
	Set Generators(
		{usage( 1 ), define, model(
			guidedradio( 3 ),
			guidedoptions( 16, 22, 44, 100 ),
			flexibleradio( 0 ),
			flexibleoptions(
				dsd( 0, 2, 4 ),
				custom(
					runchoice( 2, 44, 50, . ),
					msamplesize( 100 ),
					wholesubplot( ., 0 ),
					misc( 0, 0 )
				)
			)
		), Design(
			mfactorsettings(
				[0, -0.5, 0, 0.5, 0.5, 0.5, 0.5, 0, 0, -0.5, 0, 0.5, 0.5, -0.5, -0.5,
				-0.5, 0, -0.5, 0, 0.5, 0, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0, 0.5,
				0, -0.5, -0.5, -0.5, -0.5, 0.5, 0, -0.5, 0, -0.5, -0.5, -0.5, 0, 0,
				-0.5, 0.5, 0.5, 0.5, 0, -0.5, -0.5, 0, 0, 0, -0.5, 0.5, -0.5, 0.5,
				-0.5, -0.5, 0, 0, 0.5, 0, 0.5, -0.5, -0.5, -0.5, -0.5, -0.5, 0, 0.5,
				0.5, -0.5, -0.5, 0, -0.5, 0.5, 0.5, 0.5, -0.5, 0, 0.5, -0.5, 0.5,
				0.5, 0, 0, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0, 0.5, 0, 0, 0.5,
				0.2, 0.5, 0.5, 0.5, 0.8, 0.8, 0.5, 0.5, 0.5, 0.8, 0.8, 0.2, 0.2, 0.8,
				0.2, 0.2, 0.2, 0.8, 0.8, 0.5, 0.5, 0.8, 0.8, 0.2, 0.8, 0.2, 0.2, 0.2,
				0.5, 0.2, 0.5, 0.8, 0.8, 0.2, 0.2, 0.8, 0.2, 0.5, 0.2, 0.8, 0.8, 0.2,
				0.8, 0.5, 0.2, 0.5, 0.8, 0.5, 0.5, 0.5, 0.8, 0.5, 0.8, 0.8, 0.2, 0.2,
				0.5, 0.8, 0.2, 0.8, 0.8, 0.2, 0.2, 0.5, 0.2, 0.8, 0.2, 0.2, 0.2, 0.8,
				0.8, 0.2, 0.8, 0.5, 0.5, 0.5, 0.5, 0.8, 0.8, 0.8, 0.2, 0.8, 0.2, 0.2,
				0.8, 0.2, 0.2, 0.5, 0.8, 0.2, 0.2, 0.8, 0.2, 0.5, 0.8, 0.2, 0.8, 0.5,
				0.5, 0.8, 2, 3, 2, 3, 1, 2, 1, 1, 2, 3, 1, 1, 3, 2, 1, 3, 3, 1, 2, 2,
				3, 1, 2, 1, 1, 1, 3, 1, 3, 2, 2, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 3, 3,
				2, 2, 1, 3, 2, 2, 3, 3, 2, 3, 2, 3, 1, 1, 1, 2, 2, 2, 3, 3, 2, 1, 1,
				1, 1, 2, 2, 3, 2, 1, 2, 1, 2, 3, 1, 3, 3, 3, 1, 3, 3, 3, 2, 3, 1, 1,
				1, 3, 3, 3, 2, 1, 1, 3, 2, 2, 3, 1, 2, 2, 3, 3, 3, 2, 3, 2, 3, 1, 1,
				3, 1, 2, 3, 3, 2, 2, 1, 1, 3, 3, 1, 1, 3, 3, 2, 2, 1, 2, 3, 2, 1, 1,
				1, 3, 3, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 3, 1, 2, 1, 3, 1, 2,
				3, 1, 3, 3, 2, 2, 3, 3, 2, 1, 3, 1, 3, 1, 1, 3, 1, 2, 3, 3, 3, 1, 1,
				1, 1, 2, 3, 3, 1, 3, 3, 3, 1, 3, 3, 2, 3, 1, 1, 2, 2, 1, 2, 2, 1, 1,
				2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
				1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1,
				2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2,
				1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
				2, 2, 1, 1, 0.2, 0.2, 0.5, 0.2, 0.8, 0.2, 0.5, 0.2, 0.5, 0.8, 0.2,
				0.5, 0.2, 0.5, 0.2, 0.2, 0.5, 0.5, 0.8, 0.5, 0.2, 0.8, 0.5, 0.8, 0.2,
				0.8, 0.2, 0.2, 0.5, 0.2, 0.8, 0.8, 0.2, 0.8, 0.8, 0.8, 0.8, 0.8, 0.5,
				0.8, 0.2, 0.2, 0.5, 0.5, 0.2, 0.8, 0.2, 0.5, 0.8, 0.8, 0.5, 0.5, 0.8,
				0.5, 0.8, 0.8, 0.2, 0.2, 0.5, 0.8, 0.2, 0.8, 0.8, 0.2, 0.2, 0.5, 0.5,
				0.8, 0.8, 0.2, 0.2, 0.8, 0.2, 0.5, 0.5, 0.5, 0.8, 0.2, 0.8, 0.5, 0.2,
				0.8, 0.8, 0.8, 0.8, 0.5, 0.5, 0.2, 0.8, 0.2, 0.2, 0.2, 0.2, 0.8, 0.2,
				0.2, 0.8, 0.5, 0.5, 0.2, 0.5, 0.2, 0.5, 0.2, 0.2, 0.8, 0.2, 0.8, 0.5,
				0.2, 0.2, 0.8, 0.5, 0.5, 0.5, 0.8, 0.5, 0.8, 0.5, 0.2, 0.8, 0.8, 0.8,
				0.2, 0.2, 0.8, 0.8, 0.2, 0.5, 0.8, 0.8, 0.8, 0.8, 0.8, 0.2, 0.8, 0.2,
				0.5, 0.8, 0.2, 0.8, 0.2, 0.8, 0.5, 0.8, 0.5, 0.8, 0.5, 0.5, 0.8, 0.5,
				0.8, 0.2, 0.2, 0.8, 0.5, 0.2, 0.5, 0.2, 0.2, 0.2, 0.2, 0.8, 0.5, 0.2,
				0.5, 0.8, 0.5, 0.8, 0.8, 0.2, 0.5, 0.8, 0.5, 0.2, 0.5, 0.2, 0.8, 0.8,
				0.8, 0.2, 0.8, 0.2, 0.2, 0.5, 0.2, 0.5, 0.8, 0.2, 0.2, 0.2, 0.5, 0.8,
				0.5, 0.2, 0.5, 0.2, 0.5, 0.5, 0.2, 1, 2, 2, 2, 1, 1, 3, 2, 2, 1, 3,
				1, 1, 2, 2, 3, 2, 1, 2, 1, 2, 3, 1, 2, 1, 3, 3, 1, 1, 2, 3, 1, 2, 1,
				1, 1, 1, 1, 3, 2, 3, 3, 3, 2, 3, 3, 1, 2, 1, 3, 1, 2, 3, 2, 2, 1, 1,
				1, 1, 3, 3, 3, 1, 3, 3, 3, 1, 3, 2, 1, 1, 3, 3, 2, 3, 2, 3, 3, 2, 3,
				1, 2, 1, 2, 3, 2, 3, 1, 3, 3, 3, 3, 1, 2, 1, 2, 1, 2, 2, 3]
			),
			mplots( [](0, 1) ),
			dsdblockcol( [](0, 1) ),
			mnruns( 100 ),
			specificationstate(
				DOE(
					{usage( 1 ), Add Response( Minimize, "Cost", ., ., . ),
					Add Response( Minimize, "Lead Time", ., ., . ),
					Add Response( Minimize, "Risk", ., ., . ),
					Add Response( Maximize, "Rework Effectivness", 0, 1, . ),
					Add Response( Minimize, "Average Iterations", ., ., . ),
					Add Response( Maximize, "FPY", ., ., . ),
					Add Response( Minimize, "Physical Cost", 0, 1, . ),
					Add Response( Maximize, "Work Efficiency", 0, 1, . ),
					Add Response( Maximize, "Average Consitency", 0, 1, . ),
					Add Factor( Continuous, -0.5, 0.5, "T_Acc (old)", 0 ),
					Add Factor( Continuous, 0.2, 0.8, "T_I (old)", 0 ),
					Add Factor( Continuous, 1, 3, "DL_Eng", 0 ),
					Add Factor( Continuous, 1, 3, "DL_EKM", 0 ),
					Add Factor( Categorical, {"False", "True"}, "New Tool", 0 ),
					Add Factor( Continuous, 0.2, 0.8, "T_Acc (new)", 0 ),
					Add Factor( Continuous, 0.2, 0.8, "T_I (new)", 0 ),
					Add Factor( Continuous, 1, 3, "T_Usab", 0 ),
					Set Random Seed( 53587016 ), Add Term( {1, 0} ),
					Add Term( {1, 1} ), Add Term( {2, 1} ), Add Term( {3, 1} ),
					Add Term( {4, 1} ), Add Term( {5, 1} ), Add Term( {6, 1} ),
					Add Term( {7, 1} ), Add Term( {8, 1} ), Add Term( {1, 2} ),
					Add Term( {1, 1}, {2, 1} ), Add Term( {2, 2} ),
					Add Term( {1, 1}, {3, 1} ), Add Term( {2, 1}, {3, 1} ),
					Add Term( {3, 2} ), Add Term( {1, 1}, {4, 1} ),
					Add Term( {2, 1}, {4, 1} ), Add Term( {3, 1}, {4, 1} ),
					Add Term( {4, 2} ), Add Term( {1, 1}, {5, 1} ),
					Add Term( {2, 1}, {5, 1} ), Add Term( {3, 1}, {5, 1} ),
					Add Term( {4, 1}, {5, 1} ), Add Term( {1, 1}, {6, 1} ),
					Add Term( {2, 1}, {6, 1} ), Add Term( {3, 1}, {6, 1} ),
					Add Term( {4, 1}, {6, 1} ), Add Term( {5, 1}, {6, 1} ),
					Add Term( {6, 2} ), Add Term( {1, 1}, {7, 1} ),
					Add Term( {2, 1}, {7, 1} ), Add Term( {3, 1}, {7, 1} ),
					Add Term( {4, 1}, {7, 1} ), Add Term( {5, 1}, {7, 1} ),
					Add Term( {6, 1}, {7, 1} ), Add Term( {7, 2} ),
					Add Term( {1, 1}, {8, 1} ), Add Term( {2, 1}, {8, 1} ),
					Add Term( {3, 1}, {8, 1} ), Add Term( {4, 1}, {8, 1} ),
					Add Term( {5, 1}, {8, 1} ), Add Term( {6, 1}, {8, 1} ),
					Add Term( {7, 1}, {8, 1} ), Add Term( {8, 2} ),
					Add Alias Term( {1, 1}, {2, 1} ),
					Add Alias Term( {1, 1}, {3, 1} ),
					Add Alias Term( {1, 1}, {4, 1} ),
					Add Alias Term( {1, 1}, {5, 1} ),
					Add Alias Term( {1, 1}, {6, 1} ),
					Add Alias Term( {1, 1}, {7, 1} ),
					Add Alias Term( {1, 1}, {8, 1} ),
					Add Alias Term( {2, 1}, {3, 1} ),
					Add Alias Term( {2, 1}, {4, 1} ),
					Add Alias Term( {2, 1}, {5, 1} ),
					Add Alias Term( {2, 1}, {6, 1} ),
					Add Alias Term( {2, 1}, {7, 1} ),
					Add Alias Term( {2, 1}, {8, 1} ),
					Add Alias Term( {3, 1}, {4, 1} ),
					Add Alias Term( {3, 1}, {5, 1} ),
					Add Alias Term( {3, 1}, {6, 1} ),
					Add Alias Term( {3, 1}, {7, 1} ),
					Add Alias Term( {3, 1}, {8, 1} ),
					Add Alias Term( {4, 1}, {5, 1} ),
					Add Alias Term( {4, 1}, {6, 1} ),
					Add Alias Term( {4, 1}, {7, 1} ),
					Add Alias Term( {4, 1}, {8, 1} ),
					Add Alias Term( {5, 1}, {6, 1} ),
					Add Alias Term( {5, 1}, {7, 1} ),
					Add Alias Term( {5, 1}, {8, 1} ),
					Add Alias Term( {6, 1}, {7, 1} ),
					Add Alias Term( {6, 1}, {8, 1} ),
					Add Alias Term( {7, 1}, {8, 1} ), Set Sample Size( 100 ),
					Optimality Criterion( "Make I-Optimal Design" ),
					Simulate Responses( 0 ), Save X Matrix( 0 )}
				)
			),
			dsdplan( 0 ),
			externaldesign( 0 )
		), dataentry(
			response(
				[., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., ., .,
				., ., .]
			),
			mcustommodel(
				Fit Model(
					Effects(
						:"T_Acc (old)"n, :"T_I (old)"n, :DL_Eng, :DL_EKM, :New Tool,
						:"T_Acc (new)"n, :"T_I (new)"n, :T_Usab,
						:"T_Acc (old)"n * :"T_Acc (old)"n,
						:"T_Acc (old)"n * :"T_I (old)"n,
						:"T_I (old)"n * :"T_I (old)"n, :"T_Acc (old)"n * :DL_Eng,
						:"T_I (old)"n * :DL_Eng, :DL_Eng * :DL_Eng,
						:"T_Acc (old)"n * :DL_EKM, :"T_I (old)"n * :DL_EKM,
						:DL_Eng * :DL_EKM, :DL_EKM * :DL_EKM,
						:"T_Acc (old)"n * :New Tool, :"T_I (old)"n * :New Tool,
						:DL_Eng * :New Tool, :DL_EKM * :New Tool,
						:"T_Acc (old)"n * :"T_Acc (new)"n,
						:"T_I (old)"n * :"T_Acc (new)"n, :DL_Eng * :"T_Acc (new)"n,
						:DL_EKM * :"T_Acc (new)"n, :New Tool * :"T_Acc (new)"n,
						:"T_Acc (new)"n * :"T_Acc (new)"n,
						:"T_Acc (old)"n * :"T_I (new)"n,
						:"T_I (old)"n * :"T_I (new)"n, :DL_Eng * :"T_I (new)"n,
						:DL_EKM * :"T_I (new)"n, :New Tool * :"T_I (new)"n,
						:"T_Acc (new)"n * :"T_I (new)"n,
						:"T_I (new)"n * :"T_I (new)"n, :"T_Acc (old)"n * :T_Usab,
						:"T_I (old)"n * :T_Usab, :DL_Eng * :T_Usab,
						:DL_EKM * :T_Usab, :New Tool * :T_Usab,
						:"T_Acc (new)"n * :T_Usab, :"T_I (new)"n * :T_Usab,
						:T_Usab * :T_Usab
					),
					Y(
						:Cost, :Lead Time, :Risk, :Rework Effectivness,
						:Average Iterations, :FPY, :Physical Cost, :Work Efficiency,
						:Average Consitency
					)
				)
			)
		), datastate( 1, 0 ), jmppro( 1 ), analyze(
			guidedmodel( lineproperty( [](0, 1) ) ),
			flexiblemodel( fitplan( {} ) )
		), predict( {} ), tabindex( 2 )}
	)
)